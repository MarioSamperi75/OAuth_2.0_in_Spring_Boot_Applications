
# Facebook, google, github detail has been already integrated in the spring framework
# and they (almost) never change 
# we have to write just a couple of things!
# in developers.facebook.com create an app and copy here the id and the secret

#CLIENT DETAILS
# for the google configuration https://www.udemy.com/course/oauth2-in-spring-boot-applications/learn/lecture/22539122#questions
#spring.security.oauth2.client.registration.google.client-id = 923921097162-7er0ntoj4h1giov4ln3d81i9n0fh8hsq.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret = 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

# in developers.facebook.com create an app and copy here the id and the secret. Quite easy.
#spring.security.oauth2.client.registration.facebook.client-id = 702580284170302
#spring.security.oauth2.client.registration.facebook.client-secret = 6f2fd2a179390ab4253af65a8e5b5f53


#for the okta configuration: https://www.udemy.com/course/oauth2-in-spring-boot-applications/learn/lecture/22638571#questions
spring.security.oauth2.client.registration.okta.client-id = 0oa4qc8vx40FWVaQq5d7
spring.security.oauth2.client.registration.okta.client-secret = Tj3ErdsuuD2wMoueFTNJL3YRNeUgP2mA-ps_6iun
spring.security.oauth2.client.registration.okta.scope=openid
spring.security.oauth2.client.provider.okta.issuer-uri=https://dev-27967367.okta.com/oauth2/default

#spring.security.oauth2.client.registration.github.client-id = 
#spring.security.oauth2.client.registration.github.client-secret = 




	



#spring.security.oauth2.client.registration.mywebclient.client-id = photo-app-webclient
#spring.security.oauth2.client.registration.mywebclient.client-secret = jYbOtLBTrNRXa9E6IlxmiWSvSx8kAsGG
#spring.security.oauth2.client.registration.mywebclient.scope = openid, profile, roles
#spring.security.oauth2.client.registration.mywebclient.authorization-grant-type = authorization_code
#spring.security.oauth2.client.registration.mywebclient.redirect-uri = http://localhost:8087/login/oauth2/code/mywebclient

#PROVIDER DETAILS
#spring.security.oauth2.client.provider.mywebclient.authorization-uri = http://localhost:8080/auth/realms/appsdeveloperblog/protocol/openid-connect/auth
#spring.security.oauth2.client.provider.mywebclient.token-uri = http://localhost:8080/auth/realms/appsdeveloperblog/protocol/openid-connect/token
#spring.security.oauth2.client.provider.mywebclient.jwk-set-uri=http://localhost:8080/auth/realms/appsdeveloperblog/protocol/openid-connect/certs
#spring.security.oauth2.client.provider.mywebclient.user-info-uri = http://localhost:8080/auth/realms/appsdeveloperblog/protocol/openid-connect/userinfo
#spring.security.oauth2.client.provider.mywebclient.user-name-attribute = preferred_username

#